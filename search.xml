<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux-yum安装mysql</title>
      <link href="/2019/07/02/linux-yum-an-zhuang-mysql/"/>
      <url>/2019/07/02/linux-yum-an-zhuang-mysql/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-yum安装mysql"><a href="#Linux-yum安装mysql" class="headerlink" title="Linux-yum安装mysql"></a>Linux-yum安装mysql</h1><h2 id="选择mysql版本"><a href="#选择mysql版本" class="headerlink" title="选择mysql版本"></a>选择mysql版本</h2><p>本文章使用mysql5.7版本演示</p><p>官网地址：<a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/</a></p><p>选择你需要的版本：</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190703001.png" alt></p><p>我这里用的是centos，所以选择Red Hat这个版本，再点击下面的<strong>download</strong></p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190703002.png" alt></p><p>跳转到下个页面，然后记住这个链接地址</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190703003.png" alt></p><h2 id="检查环境"><a href="#检查环境" class="headerlink" title="检查环境"></a>检查环境</h2><p>然后最重要的一点先查看自己的环境中有没有多余的包</p><pre><code>    $ yum list installed | grep mysql</code></pre><p>如果什么都没有的话则代表没有，如果有一点的话则都要删除，不然会报错</p><pre><code>    $ yum -y remove mysql+版本包</code></pre><p>再确认无误之后，在/usr/local目录下创建一个mysql目录，在该目录下下载</p><pre class=" language-Linux"><code class="language-Linux">    $ wget https://dev.mysql.com/get/+上面的那个链接地址</code></pre><p>然后进行解压</p><pre class=" language-Linux"><code class="language-Linux">    $ tar xvf MySQL-5.6.44-1.el7.x86_64.rpm-bundle.tar</code></pre><p>mysql5.6</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190703004.png" alt></p><p>mysql5.7</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190703005.png" alt></p><h2 id="卸载掉自带的mariadb-lib"><a href="#卸载掉自带的mariadb-lib" class="headerlink" title="卸载掉自带的mariadb-lib"></a>卸载掉自带的mariadb-lib</h2><p>如果你是系统是centos7的话需要先卸载掉自带的mariadb-lib否则会产生一些莫名其妙的错误</p><p>方法一：</p><ol><li>查询mariadb-lib信息</li></ol><pre><code>    $ rpm -qa|grep mariadb</code></pre><ol start="2"><li>使用rpe -e 命令卸载 </li></ol><pre><code>    $ rpm -e mariadb-libs-5.5.56-2.el7.x86_64 --nodeps</code></pre><p>如果此方法卸载失败或者报错，请使用方法二<br>方法二：<br>使用yum remove 命令进行删除</p><pre><code>    $ yum remove mysql-libs</code></pre><h2 id="安装mysql服务"><a href="#安装mysql服务" class="headerlink" title="安装mysql服务"></a>安装mysql服务</h2><p>安装mysql-server服务，只需要安装如下4个软件包即可（这里只提供mysql5.7版本的），使用rpm -ivh进行安装（按顺序安装，后面的服务依赖前面的服务）</p><pre><code>    $ rpm -ivh mysql-community-common-5.7.26-1.el7.x86_64.rpm    $ rpm -ivh mysql-community-libs-5.7.26-1.el7.x86_64.rpm    $ rpm -ivh mysql-community-client-5.7.26-1.el7.x86_64.rpm    $ rpm -ivh mysql-community-server-5.7.23-1.el7.x86_64.rpm</code></pre><h2 id="可能出现的问题"><a href="#可能出现的问题" class="headerlink" title="可能出现的问题"></a>可能出现的问题</h2><ol><li>缺少libaio</li></ol><pre><code>    $ yum install libaio</code></pre><ol start="2"><li>缺少net-tools</li></ol><pre><code>    $ yum install net-tools</code></pre><ol start="3"><li>缺少numactl</li></ol><pre><code>    $ yum  install numactl</code></pre><h2 id="初始化数据库"><a href="#初始化数据库" class="headerlink" title="初始化数据库"></a>初始化数据库</h2><pre><code>    $ mysqld --initialize        //mysql5.7 以后需要加上--initialize</code></pre><h2 id="启动数据库"><a href="#启动数据库" class="headerlink" title="启动数据库"></a>启动数据库</h2><p>先修改mysql数据库目录的所属用户及其所属组，然后启动mysql数据库</p><pre><code>    $ chown mysql:mysql /var/lib/mysql -R        //在mysql目录下    $ systemctl start mysqld.service    $ systemctl status mysqld.service</code></pre><h2 id="登录数据库，并修改密码"><a href="#登录数据库，并修改密码" class="headerlink" title="登录数据库，并修改密码"></a>登录数据库，并修改密码</h2><p>需先修改密码才能对数据库进行操作，初始登录密码可在/var/log/mysqld.log文件中找到</p><pre><code>    $ # mysql -uroot -p&#39;******&#39;</code></pre><p>如果进入数据库失败，则很可能是提示没有权限，这个时候先找到mysql的配置文件my.cnf</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704092941.png" alt></p><p>将其打开，然后在[mysqld]的下面添加”skip-grant-tables”这句话，然后保存退出。</p><pre><code>    skip-grant-tables</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093002.png" alt></p><p>然后重启下mysql</p><pre><code>    $ service mysqld restart</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093015.png" alt></p><p>然后通过mysql -uroot命令，不需要密码即可直接进入数据库</p><pre><code>    $ mysql -uroot</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093025.png" alt></p><p>进入数据库之后修改密码，这个时候应该会报错，再接着输入flush privileges;</p><p>刷新一下权限，在设置一遍密码即可（ set password for ‘root’@’localhost’ = password(‘root’); ）</p><pre><code>    &gt; set password for &#39;root&#39;@&#39;localhost&#39; = password(&#39;root&#39;);</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093035.png" alt></p><pre><code>    &gt; flush privileges;</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093045.png" alt></p><p>设置完成之后，退出数据库，再进入刚刚的配置文件my.cnf，将刚刚加上的代码注释掉。</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093054.png" alt></p><p>注释完成之后重启下mysql服务，便设置密码成功了，可以试试能否通过密码进行登录。</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093101.png" alt></p><h2 id="修改访问权限"><a href="#修改访问权限" class="headerlink" title="修改访问权限"></a>修改访问权限</h2><p>在登录数据库之后，修改其访问权限，通过外网可以进行访问</p><pre><code>    &gt; GRANT ALL PRIVILEGES ON *.* TO &#39;root&#39;@&#39;%&#39; IDENTIFIED BY &#39;root&#39; WITH GRANT OPTION;    &gt; flush privileges;</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/20190704093258.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本命令</title>
      <link href="/2019/07/02/linux-ji-ben-ming-ling/"/>
      <url>/2019/07/02/linux-ji-ben-ming-ling/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux基本命令"><a href="#Linux基本命令" class="headerlink" title="Linux基本命令"></a>Linux基本命令</h1><h2 id="目录和文件的操作"><a href="#目录和文件的操作" class="headerlink" title="目录和文件的操作"></a>目录和文件的操作</h2><ul><li><code>pwd</code> : 查看用户的当前目录</li><li><code>cd</code> : 切换目录</li><li><code>.</code> : 当前目录</li><li><code>..</code> : 父目录，即当前目录的上一级目录</li><li><code>-</code> : 使用cd切换前的目录</li><li><code>~</code> : 表示用户主目录的绝对路径名</li><li>以斜线 ( / ) 开头 , 绝对路径 , 文件位置的完整说明</li><li>不以斜线 ( / ) 开头 , 相对路径 , 相对于当前工作目录的位置</li><li><code>ls</code> : 显示文件或者目录信息</li><li><code>mkdir</code> : 在当前目录下创建一个空目录</li><li><code>rmdir</code> : 要求目录为空 , 用于判断目录是否为空</li><li><code>touch</code> : 生成一个空文件或更改文件的时间</li><li><code>cp</code> : 复制文件或目录</li><li><code>mv</code> : 移动文件或目录，重命名文件或目录</li><li><code>rm</code> : 删除文件或目录</li><li><code>ln</code> : 建立链接文件</li><li><code>find</code> : 查找文件</li><li><code>file / stat</code> : 查看文件类型或文件属性</li><li><code>car</code> : 查看文本文件内容</li><li><code>more</code> : 分页查看文本文件内容</li><li><code>less</code> : 在分页查看的基础上 , 可以方便的搜索等操作 </li><li><code>head -20</code> : 查看文件头部的 20 行</li><li><code>tail -10</code> : 查看文件尾部的 10 行</li><li><code>echo</code> : 把内容重定向到指定的文件中 , 有则打开 , 无则创建</li><li><code>|</code> : 管道命令 , 将前面结果的命令给后面的命令</li><li><code>&gt;</code> : 重定向的覆盖模式</li><li><code>&gt;&gt;</code> : 重定向的追加模式</li></ul><p><strong>学会了这些命令之后 , 便可以实现切换目录 , 复制文件 , 粘贴文件这些简单的操作了</strong></p><h2 id="vi-vim基础操作"><a href="#vi-vim基础操作" class="headerlink" title="vi/vim基础操作"></a>vi/vim基础操作</h2><p>​    首先我们要了解vi有三种状态 , 普通 ( normal ) 模式，插入 ( insert ) 模式 , 命令行 ( cmdline ) 模式 </p><ol><li><p>进入 vi 默认是普通模式 , 在普通模式下可以控制光标的移动 , 字符、字或行的删除。</p></li><li><p>想要进入插入模式 , 在普通模式下按 i 或者insert即可 , 在插入模式下可以做到文字输入 , 按ESC键可回到命令行。</p></li><li><p>在普通模式下 , 用户按下Shift + : 可进入命令行模式 , 在此模式下会在窗口的最后一行显示一个 ‘ : ‘ 作为提示，等待输入命令。</p></li></ol><h3 id="普通模式"><a href="#普通模式" class="headerlink" title="普通模式"></a>普通模式</h3><ul><li><code>G</code>用于直接跳转到文件尾</li><li><code>ZZ</code>用于存盘退出Vi</li><li><code>ZQ</code>用于不存盘退出Vi</li><li><code>/和？</code>用于查找字符串</li><li><code>n</code>继续查找下一个</li><li><code>yy</code>复制一行</li><li><code>p</code>粘帖在下一行，P粘贴在前一行</li><li><code>dd</code>删除一行文本</li><li><code>x</code>删除光标所在的字符</li><li><code>u</code>取消上一次编辑操作（undo）</li></ul><h3 id="命令行模式"><a href="#命令行模式" class="headerlink" title="命令行模式"></a>命令行模式</h3><ul><li><code>:w</code> 保存当前编辑文件，但并不退出</li><li><code>:w</code> newfile 存为另外一个名为 “newfile” 的文件</li><li><code>:wq</code> 用于存盘退出Vi</li><li><code>:q!</code> 用于不存盘退出Vi</li><li><code>:q</code>用于直接退出Vi （未做修改）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MarkDown </tag>
            
            <tag> Vim </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux基本环境配置</title>
      <link href="/2019/07/01/linux-ji-ben-huan-jing-pei-zhi/"/>
      <url>/2019/07/01/linux-ji-ben-huan-jing-pei-zhi/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux基本环境配置"><a href="#Linux基本环境配置" class="headerlink" title="Linux基本环境配置"></a>Linux基本环境配置</h1><h2 id="Linux基本命令"><a href="#Linux基本命令" class="headerlink" title="Linux基本命令"></a>Linux基本命令</h2><p>netstat -tuwnpa 查看端口占用情况</p><p>vi文件的基本使用：</p><ol><li>编辑：按insert键，进入编辑模式在此模式下可以进行编辑。</li><li>保存并退出：按Esc键，按下Shift+:，再输入wq，回车。</li><li>强制退出不保存：按Esc键，按下Shift+:，在输入!q，回车。</li></ol><h2 id="JDK的安装"><a href="#JDK的安装" class="headerlink" title="JDK的安装"></a>JDK的安装</h2><h3 id="通过tar-gz压缩包安装"><a href="#通过tar-gz压缩包安装" class="headerlink" title="通过tar.gz压缩包安装"></a>通过tar.gz压缩包安装</h3><ol><li><p>首先去官网下载Java的tar.gz压缩包，这里提供的是jdk1.8的安装路径，需要安装别的版本请自行查找。</p><p><a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a></p><p>进入网站，勾选接受许可协议，然后下载所需要的linux版本，然后通过上传工具上传到linux系统下的/usr/local目录下。</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1561962419336.png" alt></p></li><li><p>然后在/usr/local目录下，直接解压刚刚上传的文件</p><pre class=" language-Linux"><code class="language-Linux">   $ tar -vzxf jdk-8u211-linux-x64.tar.gz </code></pre></li><li><p>解压完成之后开始配置环境变量，进入/etc/profile文件，然后在文件最下方添加下面三句话。</p><pre class=" language-Linux"><code class="language-Linux">   $ vi /etc/profile   export JAVA_HOME=/usr/local/jdk1.8.0_211 //这里是JDK的目录地址   export CLASSPATH=$:CLASSPATH:$JAVA_HOME/lib/   export PATH=$PATH:$JAVA_HOME/bin</code></pre><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1561964513380.png" alt></p></li><li><p>保存退出之后（按Esc键，按下Shift+:，再输入wq，回车），重新加载配置文件</p><pre class=" language-Linux"><code class="language-Linux">   $ source /etc/profile</code></pre></li><li><p>测试是否配置成功</p><pre class=" language-Linux"><code class="language-Linux">   $ java -version</code></pre></li></ol><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1561965033517.png" alt></p><h2 id="MySQL的安装"><a href="#MySQL的安装" class="headerlink" title="MySQL的安装"></a>MySQL的安装</h2><h3 id="通过tar-gz压缩包安装-1"><a href="#通过tar-gz压缩包安装-1" class="headerlink" title="通过tar.gz压缩包安装"></a>通过tar.gz压缩包安装</h3><ol><li><p>首先根据个人需要关闭Linux的防火墙，执行命令</p><pre class=" language-Linux"><code class="language-Linux">$ chkconfig iptables off</code></pre></li><li><p>从mysql官网上下载自己合适的mysql版本。<br><a href="https://dev.mysql.com/downloads/mysql/5.6.html#downloads" target="_blank" rel="noopener">https://dev.mysql.com/downloads/mysql/5.6.html#downloads</a></p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1561975264256.png" alt>)</p></li><li><p>将下载好的压缩包上传到linux服务器上的/usr/local（这里注意一定路径不能出错，不然后面会很麻烦），上传完成之后，直接解压该文件。</p><pre class=" language-Linux"><code class="language-Linux">$ tar -zxvf mysql-5.6.33-linux-glibc2.5-x86_64.tar.gz</code></pre><p>​    解压完成之后将文件重命名为mysql方便管理</p><pre class=" language-Linux"><code class="language-Linux">$ mv mysql-5.6.33-linux-glibc2.5-x86_64 mysql</code></pre></li><li><p>添加mysql用户组和mysql用户,首先检查当前系统下是否有mysql用户组和mysql用户</p><pre class=" language-Linux"><code class="language-Linux">$ groups mysql</code></pre><p>​    如果没有，则添加：</p><pre class=" language-Linux"><code class="language-Linux">$ groupadd mysql useradd -r -g mysql mysql</code></pre></li><li><p>进入/usr/local/mysql目录更改目录</p><pre class=" language-Linux"><code class="language-Linux">$ cd mysql/ $ chown -R mysql:mysql ./</code></pre></li><li><p>执行安装脚本</p><pre class=" language-Linux"><code class="language-Linux">$ ./scripts/mysql_install_db --user=mysql</code></pre></li><li><p>安装脚本之后，修改当前目录拥有者为root用户，修改data目录拥有者为mysql</p><pre class=" language-Linux"><code class="language-Linux">$ chown -R root:root ./ $ chown -R mysql:mysql data</code></pre></li><li><p>更改mysql密码。</p><pre class=" language-Linux"><code class="language-Linux">$ ./bin/mysqladmin -u root -h localhost.localdomain password 'root' //修改密码为root</code></pre><p>​    如果修改密码报错则可能是因为还没有启动mysql，通过下面的命令启动mysql</p><pre class=" language-Linux"><code class="language-Linux">$ ./support-files/mysql.server start</code></pre><p>​    如果启动报错，则可能是已经存在mysql进程</p><pre class=" language-Linux"><code class="language-Linux">$ ps aux|grep mysql kill -9 上边的进程号 //或者下边一条命令即可杀掉所有MySQL进程 $ ps aux|grep mysql|awk '{print $2}'|xargs kill -9</code></pre><p>​    杀死之后，再启动就可以了。</p><pre class=" language-Linux"><code class="language-Linux">$ ./support-files/mysql.server start</code></pre><p>​    MySQL启动之后再执行如下命令更改密码：</p><pre class=" language-Linux"><code class="language-Linux">$ ./bin/mysqladmin -u root -h localhost.localdomain password 'root'</code></pre><p>​    密码更改后即可登录MySQL</p><pre class=" language-Linux"><code class="language-Linux">$ ./bin/mysql -h127.0.0.1 -uroot -proot</code></pre><p>​    登录之后将其他用户的密码也可改为root</p><pre class=" language-Linux"><code class="language-Linux">$ update mysql.user set password=password('root') where user='root';$ flush privileges;</code></pre></li><li><p>增加远程登录权限。</p><p>完成上面的操作之后可以实现本地登录，但是远程登录会提示错误，为解决这一问题，需要本地登陆MySQL后执行如下命令</p><pre class=" language-Linux"><code class="language-Linux">$ grant all privileges on *.* to root@'%' identified by 'root';$ flush privileges;</code></pre></li><li><p>将MySQL加入Service系统服务</p><pre class=" language-Linux"><code class="language-Linux">$ cp support-files/mysql.server /etc/init.d/mysqld$ chkconfig --add mysqld$ chkconfig mysqld on$ service mysqld restart$ service mysqld status</code></pre></li><li><p>配置my.cnf文件</p><pre class=" language-Linux"><code class="language-Linux">vim my.cnf #添加以下三条语句并保存退出 character_set_server=utf8 lower_case_table_names=1 max_allowed_packet=100M</code></pre><p>​    配置完成之后，重启mysql服务</p></li></ol><h3 id="通过wget命令安装"><a href="#通过wget命令安装" class="headerlink" title="通过wget命令安装"></a>通过wget命令安装</h3><p>主要区别在于第二步的方法，直接在/usr/local目录下执行命令，这里提供5.6和5.7两种安装包，如果需要其他版本，请自行查找。</p><pre class=" language-Linux"><code class="language-Linux">   5.7：$ wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.22-linux-glibc2.12-x86_64.tar.gz    5.6：$ wget https://dev.mysql.com/get/Downloads/MySQL-5.6/mysql-5.6.32-linux-glibc2.5-x86_64.tar.gz</code></pre><h2 id="Redis的安装"><a href="#Redis的安装" class="headerlink" title="Redis的安装"></a>Redis的安装</h2><h3 id="通过wget命令安装-1"><a href="#通过wget命令安装-1" class="headerlink" title="通过wget命令安装"></a>通过wget命令安装</h3><h4 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h4><ol><li>这里采用官方推荐的方式直接通过wget命令来下载redis.tar.gz安装包，在/usr/local目录下直接执行下面这行命令，需要最新的安装包可以访问官网进行查阅（<a href="https://redis.io/download" target="_blank" rel="noopener">https://redis.io/download</a>）</li></ol><pre class=" language-Linux"><code class="language-Linux">   $ wget http://download.redis.io/releases/redis-5.0.5.tar.gz</code></pre><p>   下载完成之后在当前目录进行解压</p><pre class=" language-Linux"><code class="language-Linux">   $ tar -zxf redis-5.0.5.tar.gz</code></pre><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><ol start="2"><li>解压完成之后，进入目录使用make命令，对Redis文件进行编译</li></ol><pre class=" language-Linux"><code class="language-Linux">   $ make</code></pre><p>   PS：如果在编译过程中出现问题，可能是安装包的下载出现错误，可以重新下载或者采用旧版本的安装包</p><pre><code>  如果还未能解决问题，请参考连接https://www.cnblogs.com/liu2-/p/6914159.html</code></pre><ol start="3"><li>编译完成之后，进入src目录，执行make install命令进行Redis的安装</li></ol><pre class=" language-Linux"><code class="language-Linux">   $ cd src/   $ make install</code></pre><h4 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h4><ol start="4"><li><p>安装完成之后，为了方便管理将Redis文件中的配置文件和常用命令移动到统一文件中</p><p>1) 在redis目录下创建bin和etc文件</p></li></ol><pre class=" language-Linux"><code class="language-Linux">   $ mkdir bin   $ mkdir etc</code></pre><p>   2) 将redis.conf文件复制到刚刚创建的etc目录下</p><pre class=" language-Linux"><code class="language-Linux">   $ mv redis.conf etc   $ mkdir etc</code></pre><p>   3) 进入src目录，将mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-server这些文件移动到/usr/local/redis-5.0.5/bin目录下</p><pre class=" language-Linux"><code class="language-Linux">   $ mv mkreleasehdr.sh redis-benchmark redis-check-aof redis-check-rdb redis-cli redis-server /usr/local/redis-5.0.5/bin/</code></pre><p>   4) 依次查看移动后的文件</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1562031138563.png" alt></p><ol start="5"><li><p>执行bin目录下的redis-service 启动Redis</p><pre class=" language-Linux"><code class="language-Linux">$ cd bin$ redis-server</code></pre></li><li><p>设置绑定ip（根据个人需求配置），进入etc目录，编辑redis.conf文件</p><pre class=" language-Linux"><code class="language-Linux">$ vi redis.conf</code></pre></li></ol><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1562031921839.png" alt></p><ol start="7"><li>设置在后台启动redis，编辑redis.conf文件，将下图的配置修改为yes（我这里是修改之后的）<pre class=" language-Linux"><code class="language-Linux">$ vi redis.conf</code></pre></li></ol><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1562031888808.png" alt></p><ol start="8"><li>再次启动redis服务，并指定启动的服务配置文件，这样就能在后台启动<pre class=" language-Linux"><code class="language-Linux">$ redis-server etc/redis.conf    //启动redis服务，并指定配置文件$ bin/redis-cli                  //链接客户端$ netstat -tunpl|grep 6379        //链接客户端</code></pre></li></ol><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1562032592616.png" alt></p><p>出现如上图中的“Configuration loaded”则表示已经成功加载了配置文件</p><h4 id="注册服务"><a href="#注册服务" class="headerlink" title="注册服务"></a>注册服务</h4><ol><li>可以根据个人需要将Redis注册成服务，首先复制脚本到/etc/rc.d/init.d目录下，并重命名为redis<pre class=" language-Linux"><code class="language-Linux">$ cp /usr/local/src/redis-5.0.5/utils/redis_init_script /etc/rc.d/init.d/redis</code></pre></li><li>将其注册为服务（我在这里是没有问题，但我看网上的教程可能会出问题，需要改redis脚本）<pre class=" language-Linux"><code class="language-Linux">$ chkconfig --add redis</code></pre></li><li>将redis的配置文件拷贝到/etc/redis/6379.conf（这里端口号默认为6379）<pre class=" language-Linux"><code class="language-Linux">$ mkdir /etc/redis$ cp /usr/local/src/redis-5.0.5/etc/redis.conf /etc/redis/6379.conf</code></pre></li><li>启动redis服务<pre class=" language-Linux"><code class="language-Linux">$ service redis start</code></pre><h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4></li></ol><p>当我们通过后台启动Redis后，每次调用redis-cli命令都需要进入redis目录下，这个时候可以添加环境变量，来使任何地方都可以调用redis-cli命令。</p><ol><li><p>修改/etc/profile文件，在最后一行追加命令，并使profile文件立即生效</p><pre class=" language-Linux"><code class="language-Linux">$ vi /etc/profile$ export PATH="$PATH:/usr/local/redis/bin"$ source /etc/profile</code></pre></li><li><p>这样就可以直接调用redis-cli命令了，如下图所示</p><p><img src="https://blog-images-cyhcoder.oss-cn-shanghai.aliyuncs.com/images/1562035693456.png" alt></p></li></ol><h4 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h4><ol><li>前台模式启动：Ctrl+C</li><li>后台模式启动：$ sudo kill -9 666 （注意：-9为强制终止，666为此时redis-server的进程ID）</li><li>推荐的方式：$ redis-cli shutdown (通过redis-cli调用shutdown命令来优雅的关闭)</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
